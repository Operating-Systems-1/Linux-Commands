#                                                                                                          
# Εργαστήριο ΛΣ 1 / Άσκηση 1 / 2021-2022                                                                   
# Ονοματεπώνυμο   : Αθανασίου Βασίλειος Ευάγγελος                                                          
# Αριθμός Μητρώου : 19390005                                                                               
#
--------------------------------------------------------------------------------------------------------------------------------------------------                                                                                                        
# Ερώτηση 1.                                                                                               
# Δημιουργήστε στον τρέχοντα κατάλογο το αρχείο "ask1.txt" με τα ακόλουθα περιεχόμενα (όνομα, επώνυμο, username, ΤΚ, περιοχή, τηλ.)      
# και εμφανίστε το στη συνέχεια στην οθόνη, με αριθμημένες τις γραμμές του.  
# George Pappas george2 12136 Peristeri -------                                                            
# Nick Nikolaoy nick23 12232 Aigaleo 5314555                                                               
# George Georgioy george583 11132 Athens -------                                                          
# Helen Georgioy helen3 12136 Peristeri 5748456                                                           
# Nick Pappas nick4 11223 Aigaleo 5324123                                                                  
# Helen Ioannoy helen367 13222 Athens -------                                                             
# Helen Thanoy helen36 11132 Peristeri 9718345                                                             
# Vasilis Mamalis vas32 12345 Dafni 9738383                                                                
#                                                                                                                   
# Απάντηση : Αρχικά, θα μεταβούμε με την εντολή "cd" στον κατάλογο "Documents" και θα δημιουργήσουμε με την εντολή "mkdir" τον κα-
# τάλογο "Project1", όπου πρόκειται να δημιουργηθεί το αρχείο "ask1.txt". Πληκτρολογώντας την εντολή "cd ../.." μεταβαίνουμε 
# στο γονικό κατάλογο του "Documents" που είναι o κατάλογος "Home".

cd Documents
mkdir Project1
cd ../..

# Στη συνέχεια, θα χρησιμοποιήσουμε την εντολή "cat > ./Documents/Project1/<όνομα_αρχείου>" για να δημιουργήσουμε το αρχείο με όνομα 
# "ask1.txt" στον κατάλογο με όνομα "Project1" πληκτρολογώντας τα περιεχόμενα που δίνει η εκφώνηση της ερώτησης. Τέλος, για να εμφα-
# νίσουμε τα περιεχόμενα του αρχείου "ask1.txt" στην οθόνη με αριθμημένες τις γραμμές του, θα χρησιμοποιήσουμε την εντολή "cat -n".
#
# Αποτέλεσμα εκτέλεσης της τελευταίας εντολής :
# 
#      1  George Pappas george2 12136 Peristeri -------
#      2  Nick Nikolaoy nick23 12232 Aigaleo 5314555
#      3  George Georgioy george583 11132 Athens -------
#      4  Helen Georgioy helen3 12136 Peristeri 5748456
#      5  Nick Pappas nick4 11223 Aigaleo 5324123
#      6  Helen Ioannoy helen367 13222 Athens -------
#      7  Helen Thanoy helen36 11132 Peristeri 9718345
#      8  Vasilis Mamalis vas32 12345 Dafni 9738383

cat > ./Documents/Project1/ask1.txt
George Pappas george2 12136 Peristeri -------
Nick Nikolaoy nick23 12232 Aigaleo 5314555
George Georgioy george583 11132 Athens -------
Helen Georgioy helen3 12136 Peristeri 5748456
Nick Pappas nick4 11223 Aigaleo 5324123
Helen Ioannoy helen367 13222 Athens -------
Helen Thanoy helen36 11132 Peristeri 9718345
Vasilis Mamalis vas32 12345 Dafni 9738383
cat -n ./Documents/Project1/ask1.txt

--------------------------------------------------------------------------------------------------------------------------------------------------
# Ερώτηση 2.
# Τρέξτε την εντολή "cal -3 > calfile.txt" και εξηγείστε τι ακριβώς κάνει.
#
# Απάντηση : Η εντολή "cal -3" παρουσιάζει το ημερολόγιο τριών μηνών του τρέχοντος έτους. Το ημερολόγιο του μήνα που εκτελείται η ε- 
# τολή, του μήνα πριν και του μήνα μετα. Επίσης, υπογραμμίζεται και η μέρα που εκτελείται η εντολή. Στο παράδειγμα μας η εντολή πλη-
# κτρολογήθηκε στις "14 Δεκεμβρίου 2021", οπότε εμφανίζει το ημερολόγιο του Νοέμβριου "2021", του Δεκεμβρίου "2021" και του Ιανουαρίου 
# "2022". Με την εντολή "cal -3 > calfile.txt" δημιουργείται ένα άρχειο, εφόσον δεν υπάρχει, με όνομα "calfile.txt" και μεταφέρεται το 
# αποτέλεσμα της εντολής "cal -3" ως περιεχόμενο στο αρχείο αυτό. Πράγματι, αν εμφανίσουμε το περιεχόμενο του αρχείου "calfile.txt" με 
# την εντολή "cat calfile.txt", θα παρατηρήσουμε ότι είναι το αποτέλεσμα της εντολής "cal -3". Η τρέχουσα διαδικασία γίνεται στον κατά-
# λογο "Project1" με το μονοπάτι "./Documents/Project1/calfile.txt".
# 
# Αποτέλεσμα εκτέλεσης της τελευταίας εντολής:
#
#  Νοεμβρίου 2021       Δεκεμβρίου 2021       Ιανουαρίου 2022     
# Κυ Δε Τρ Τε Πε Πα Σα  Κυ Δε Τρ Τε Πε Πα Σα  Κυ Δε Τρ Τε Πε Πα Σα  
#     1  2  3  4  5  6            1  2  3  4                     1  
#  7  8  9 10 11 12 13   5  6  7  8  9 10 11   2  3  4  5  6  7  8  
# 14 15 16 17 18 19 20  12 13 14 15 16 17 18   9 10 11 12 13 14 15  
# 21 22 23 24 25 26 27  19 20 21 22 23 24 25  16 17 18 19 20 21 22  
# 28 29 30              26 27 28 29 30 31     23 24 25 26 27 28 29  
#											  30 31

cal -3 > ./Documents/Project1/calfile.txt
cat ./Documents/Project1/calfile.txt

--------------------------------------------------------------------------------------------------------------------------------------------------
# Ερώτηση 3.
# Συνενώστε τα αρχεία "calfile.txt" και "ask1.txt" σε ένα αρχείο με όνομα "full.txt".
# 
# Απάντηση : BΘα χρησιμοποιήσουμε την εντολή "cat ask1.txt calfile.txt > full.txt". Το αρχείο "full.txt" δημιουργείται αυτόματα με την ε-
# ντολή. Έπειτα, θα χρησιμοποιήσουμε την εντολή "cat full.txt" για να εμφανίσουμε τα περιεχόμενα του αρχείου "full.txt", όπου παρατηρού-
# με ότι τα περιεχόμενα του "full.txt" είναι τα περιεχόμενα των αρχείων "ask1.txt" και "calfile.txt" μαζί. Η τρέχουσα διαδικασία γίνεται 
# στον κατάλογο "Project1" με γονικό κατάλογο τον "Documents" και γι' αυτό μεταβαίνουμε πρώτα σ' αυτόν.
#
# Αποτέλεσμα εκτέλεσης της τελευταίας εντολής :
#
# George Pappas george2 12136 Peristeri -------
# Nick Nikolaoy nick23 12232 Aigaleo 5314555
# George Georgioy george583 11132 Athens -------
# Helen Georgioy helen3 12136 Peristeri 5748456
# Nick Pappas nick4 11223 Aigaleo 5324123
# Helen Ioannoy helen367 13222 Athens -------
# Helen Thanoy helen36 11132 Peristeri 9718345
# Vasilis Mamalis vas32 12345 Dafni 9738383
#   Νοεμβρίου 2021       Δεκεμβρίου 2021       Ιανουαρίου 2022     
# Κυ Δε Τρ Τε Πε Πα Σα  Κυ Δε Τρ Τε Πε Πα Σα  Κυ Δε Τρ Τε Πε Πα Σα  
#     1  2  3  4  5  6            1  2  3  4                     1  
#  7  8  9 10 11 12 13   5  6  7  8  9 10 11   2  3  4  5  6  7  8  
# 14 15 16 17 18 19 20  12 13 14 15 16 17 18   9 10 11 12 13 14 15  
# 21 22 23 24 25 26 27  19 20 21 22 23 24 25  16 17 18 19 20 21 22  
# 28 29 30              26 27 28 29 30 31     23 24 25 26 27 28 29  
# 											  30 31

cd ./Documents/Project1
cat ask1.txt calfile.txt > full.txt
cat full.txt

--------------------------------------------------------------------------------------------------------------------------------------------------
# Ερώτηση 4.
# Εμφανίστε στην οθόνη τα πέντε πιο πρόσφατα τροποποιημένα αρχεία του καταλόγου σας. 
#
# Απάντηση : Θα χρησιμοποιήσουμε την εντολή "ls", η οποία εμφανίζει τα αρχεία που βρίσκονται στον τρέχοντα κατάλογο (./Documents/Project1). 
# Με την παράμετρο "-alt" εμφανίζουμε όλα τα κρυφά (αρχεία που το όνομα τους αρχίζει με τελεία ".") και μη αρχεία (-a), με τις ιδιότητες 
# τους (-l) και με το χρόνο που τροποποιήθηκαν πρόσφατα.
#
# Αποτέλεσμα εκτέλεσης της εντολής :
#
# total 36
# drwxr-xr-x 18 ice19390005 ice19390005  4096 Δεκ  16 21:12 ..
# drwxr-xr-x  2 ice19390005 ice19390005  4096 Δεκ  16 21:09 .
# -rw-rw-r--  1 ice19390005 ice19390005   964 Δεκ  16 16:37 full.txt
# -rw-rw-r--  1 ice19390005 ice19390005   611 Δεκ  16 16:36 calfile.txt
# -rw-rw-r--  1 ice19390005 ice19390005   353 Δεκ  16 16:11 ask1.txt
# -rw-r--r--  1 ice19390005 ice19390005 12288 Δεκ  14 02:20 .ask1.txt.swp
# -rw-rw-r--  1 ice19390005 ice19390005    81 Δεκ   8 16:35 .~lock.ask1.txt#
#
# Τα παραπάνω αρχεία είναι ταξινομημένα με βάση τον χρόνο τροποποίησης τους κατά φθίνουσα σειρά από πάνω προς κάτω. Επομένως τα πέντε 
# πιο πρόσφατα τροποποιημένα αρχεία είναι τα αρχεία με όνομα ".." , ".", "full.txt", "calfile.txt" και "ask1.txt".

ls -alt ./Documents/Project1

--------------------------------------------------------------------------------------------------------------------------------------------------
# Ερώτηση 5.
# Δημιουργήστε έναν κατάλογο με όνομα "mydir1". Μεταβείτε σε αυτόν και στη συνέχεια αντιγράψτε εκεί (χωρίς να αλλάξετε κατάλογο) το α-
# ρχείο "full.txt" (από το γονικό κατάλογο). Μετονομάστε το εν συνεχεία σε "new.txt". Επιστρέψτε στο γονικό κατάλογο. Διαγράψτε τον κα-
# τάλογο "mydir1" και τα περιεχόμενά του.
#
# Απάντηση : Αρχικά, για την δημιουργία του καταλόγου "mydir1" θα χρησιμοποιήσουμε την εντολή "mkdir" στον κατάλογο "./Documents/Project1". 
# Μεταβαίνουμε στην συνέχεια από το γονικό κατάλογο "./Documents/Project1" στον "mydir1" με την εντολή "cd". Ύστερα, παραμένοντας στον κατά-
# λογο "mydir1", αντιγράφουμε το αρχείο "full.txt" που βρίσκεται στο γονικό κατάλογο "Project1" με την εντολή "cp ../full.txt copyfull.txt". 
# Το αρχείο "copyfull.txt" δημιουργείται αυτόματα με την εντολή και έχει τα περιεχόμενα του αρχείου "full.txt". Στη συνέχεια μετανομάζουμε το 
# νέο αρχείο "copyfull.txt" σε "new.txt" με την εντολή "mv copyfull.txt new.txt". Επιστρέφουμε μετά στο γονικό κατάλογο "Project1" με την εντο-
# λή "cd ..". Από 'κεί διαγράφουμε τον κατάλογο "mydir1" με την εντολή "rm" και με την παράμετρο "-rf" διαγράφουμε και τα περιεχόμενα του.

mkdir ./Documents/Project1/mydir1
cd ./Documents/Project1/mydir1
cp ../full.txt copyfull.txt
mv copyfull.txt new.txt
cd ..
rm -rf mydir1

--------------------------------------------------------------------------------------------------------------------------------------------------
# Ερώτηση 6.
# Δώστε τις εντολές που θα εμφανίσουν: (α) όλα τα αρχεία του καταλόγου "/usr" με πληροφορίες για το "inode" τους και το μέγεθος τους σε 
# "blocks". (β) όλα τα περιεχόμενα του δέντρου καταλόγων και υποκαταλόγων (αναδρομικά) που βρίσκονται κάτω από τον κατάλογο "/usr", με 
# πλήρεις πληροφορίες για κάθε ένα από αυτά και εμφανιζόμενα σταδιακά, σελίδα προς σελίδα.
#
# Απάντηση : (α) Θα χρησιμοποιήσουμε την εντολή "ls" με παράμετρο "-alis" και μονοπάτι "/usr". Πιο αναλυτικά, εμφανίζουμε όλα τα αρχεία
# του καταλόγου "/usr" κρυφά και μη (-a), με τις ιδιότητες τους (-l), με τα "inodes" τους (-i) και με το μέγεθος τους σε "blocks" (-s). 
# (β) Αρχικά, θα χρησιμοποιήσουμε την εντολή "ls" με παράμετρο "-Ralis" και μονοπάτι "/usr". Πιο αναλυτικά, εμφανίζουμε όλα (-a) τα περιε-
# χόμενα του δέντρου καταλόγων και υποκαταλόγων που βρίσκονται κάτω από τον κατάλογο "/usr" (-R), με τις ιδιότητες τους (-l), με τα "inodes" 
# (-i) και με το μέγεθος τους σε "blocks" (-s). Κάνοντας μια σωλήνωση (|) με την εντολή "more" (όπου εμφανίζει τα περιεχόμενα σταδιακά ανά ο-
# θόνη) φτάνουμε στο επιθυμητό αποτέλεσμα που ζητάει η εκφώνηση του υποερωτήματος.
#
# Αποτέλεσμα εκτέλεσης της εντολής :
# 
# (α) total 116
#     131078  4 drwxr-xr-x  14 root root  4096 Αυγ  19 13:32 .
#          2  4 drwxr-xr-x  20 root root  4096 Δεκ   1 23:04 ..
#     131094 40 drwxr-xr-x   2 root root 40960 Δεκ  16 12:33 bin
#     131095  4 drwxr-xr-x   2 root root  4096 Αυγ  19 13:35 games
#     131096  4 drwxr-xr-x  10 root root  4096 Δεκ   1 23:08 include
#     131097  4 drwxr-xr-x 117 root root  4096 Δεκ   1 23:17 lib
#     131098  4 drwxr-xr-x   2 root root  4096 Αυγ  19 13:29 lib32
#     131099  4 drwxr-xr-x   2 root root  4096 Αυγ  19 13:30 lib64
#     131100  4 drwxr-xr-x  12 root root  4096 Δεκ   1 23:09 libexec
#     131101  4 drwxr-xr-x   2 root root  4096 Αυγ  19 13:29 libx32
#     131102  4 drwxr-xr-x  10 root root  4096 Αυγ  19 13:29 local
#     131103 20 drwxr-xr-x   2 root root 20480 Δεκ  13 23:14 sbin
#     131104 12 drwxr-xr-x 250 root root 12288 Δεκ   1 23:17 share
#     131105  4 drwxr-xr-x   6 root root  4096 Δεκ   1 23:19 src
#
# Στη πρώτη στήλη είναι τα "inodes" των αρχείων και στη δεύτερη το μέγεθος τους σε "blocks".
#
# (β) /usr:
#     total 116
#     131078  4 drwxr-xr-x  14 root root  4096 Αυγ  19 13:32 .
#          2  4 drwxr-xr-x  20 root root  4096 Δεκ   1 23:04 ..
#     131094 40 drwxr-xr-x   2 root root 40960 Δεκ  16 12:33 bin
#     131095  4 drwxr-xr-x   2 root root  4096 Αυγ  19 13:35 games
#     131096  4 drwxr-xr-x  10 root root  4096 Δεκ   1 23:08 include
#     131097  4 drwxr-xr-x 117 root root  4096 Δεκ   1 23:17 lib
#     131098  4 drwxr-xr-x   2 root root  4096 Αυγ  19 13:29 lib32
#     131099  4 drwxr-xr-x   2 root root  4096 Αυγ  19 13:30 lib64
#     131100  4 drwxr-xr-x  12 root root  4096 Δεκ   1 23:09 libexec
#     131101  4 drwxr-xr-x   2 root root  4096 Αυγ  19 13:29 libx32
#     131102  4 drwxr-xr-x  10 root root  4096 Αυγ  19 13:29 local
#     131103 20 drwxr-xr-x   2 root root 20480 Δεκ  13 23:14 sbin
#     131104 12 drwxr-xr-x 250 root root 12288 Δεκ   1 23:17 share
#     131105  4 drwxr-xr-x   6 root root  4096 Δεκ   1 23:19 src
#
#     /usr/bin:
#     total 166340
#     131094    40 drwxr-xr-x  2 root root       40960 Δεκ  16 12:33 .
#     131078     4 drwxr-xr-x 14 root root        4096 Αυγ  19 13:32 ..
#     131114    60 -rwxr-xr-x  1 root root       59736 Σεπ   5  2019 [
#     131115    32 -rwxr-xr-x  1 root root       31248 Μαΐ  19  2020 aa-enabled
#     131116    36 -rwxr-xr-x  1 root root       35344 Μαΐ  19  2020 aa-exec
#     131117    24 -rwxr-xr-x  1 root root       22912 Απρ  14  2021 aconnect
#     131118    20 -rwxr-xr-x  1 root root       19016 Νοε  28  2019 acpi_listen
#     131119     8 -rwxr-xr-x  1 root root        7415 Απρ  30  2021 add-apt-reposito
#     ry
#     --More-- (Με το πάτημα του πλήκτρου "Enter" εμφανίζει τα επόμενα περιεχόμενα)
#
# Στη πρώτη στήλη είναι τα "inodes" των αρχείων και στη δεύτερη το μέγεθος τους σε "blocks".

(α) ls -alis /usr
(β) ls -Ralis /usr 
	
--------------------------------------------------------------------------------------------------------------------------------------------------
# Ερώτηση 7.
# Δημιουργήστε έναν κατάλογο με όνομα "testdir1". Μεταβείτε σε αυτόν και φτιάξτε εκεί ένα "hard link" (με το όνομα "ask1link") προς το
# αρχείο "ask1.txt" του γονικού καταλόγου. Βεβαιωθείτε (δίνοντας την κατάλληλη εντολή και εξηγώντας τι βλέπετε) ότι έχει δημιουργηθεί 
# και ότι δεν είναι "symbolic (soft) link".
#
# Απάντηση : Αρχικά, θα χρησιμοποιήσουμε την εντολή "mkdir" για να δημιουργήσουμε τον κατάλογο με όνομα "testdir1" στο γονικό κατάλογο 
# "./Documents/Project1". Μετακινούμε το αρχείο "ask1.txt" από το γονικό κατάλογο "Project1" στον κατάλογο "testdir1" με την εντολή "mv
# ask1.txt ./testdir1". Με την εντολή "cd" μεταβαίνουμε στον κατάλογο "testdir1" και φτιάχνουμε ένα "hard link" με όνομα "ask1link" με 
# την εντολή "ln". Για να βεβαιωθούμε ότι έχει δημιουργηθεί και ότι δεν είναι "symbolic link" δημιουργούμε και ένα "soft link" προς το 
# αρχείο "ask1.txt" με την εντολή "ln" και παράμετρο "-s" με όνομα "softask1.txt". Για να δούμε αναλυτικά με τα "inodes" τα αρχεία που 
# περιλαμβάνει ο κατάλογος "tesdir1" χρησιμοποιούμε την εντολή "ls" με παραμέτρους "-li" για την εμφάνιση των ιδιοτήτων (-l) και των 
# "inodes" των αρχείων (-i). 
#
# Αποτέλεσμα εκτέλεσης της τελευταίας εντολής : 
# 
# total 8
# 16040 -rw-rw-r-- 2 ice19390005 ice19390005 353 Δεκ  16 16:11 ask1link
# 16040 -rw-rw-r-- 2 ice19390005 ice19390005 353 Δεκ  16 16:11 ask1.txt
# 17438 lrwxrwxrwx 1 ice19390005 ice19390005   8 Δεκ  17 01:17 softask1.txt -> ask1.txt
#
# Παρατηρούμε ότι τα αρχεία "ask1.txt" και "ask1link" έχουν την ίδια "inode" (1η στήλη 16040). Επίσης, στην 3η στήλη παρατηρούμε ότι 
# και τα δύο αρχεία έχουν "2" συνδέσμους που σημαίνει ότι για να διαγραφεί τελείως το αρχείο με τα περιεχόμενα από το λειτουργικό σύ-
# στημα θα πρέπει να διαγραφούν και το αρχείο "ask1.txt" και το "ask1link". Γενικά, έχουν ακριβώς τις ίδιε ιδιότητες. Αυτό επιβεβαιώνει 
# ότι όντως δημιουργήθηκε ένας "link" του "ask1.txt". Στην 3η γραμμή βλέπουμε ότι έχει δημιουργηθεί το αρχείο "softask1.txt -> ask1.txt" 
# με διαφορετική "inode" από τα άλλα δύο αρχεία (1η στήλη 17438) και με έναν σύνδεσμο (3η στήλη 1) και με το "->" δείχνει ένα άλλο μονοπάτι
# προς το αρχείο "ask1.txt". Αυτή η ενέργεια αποδεικνύει ότι όντως δημιουργήθηκε ένας "hard link" του "ask1.txt". Άλλη μια κατατοπιστική 
# διαφορά είναι ότι άμα διαγράψουμε το αρχείο "ask1.txt" με την εντολή "rm ask1.txt" θα παρατηρήσουμε αυτές τις διαφορές ως προς τα περιε-
# χόμενα του "ask1link" και του "softask1.txt" με τις εντολές (α) "cat ask1link" και (β) "cat softask1.txt" αντίστοιχα.
 
mkdir ./Documents/Project1/testdir1
cd ./Documents/Project1
mv ask1.txt ./testdir1
cd testdir1
ln ask1.txt ask1link
ln -s ask1.txt softask1.txt
ls -li

# Αποτέλεσμα εκτέλεσης της τελευταίας εντολής : 
# 
# (α) George Pappas george2 12136 Peristeri -------
#     Nick Nikolaoy nick23 12232 Aigaleo 5314555
#     George Georgioy george583 11132 Athens -------
#     Helen Georgioy helen3 12136 Peristeri 5748456
#     Nick Pappas nick4 11223 Aigaleo 5324123
#     Helen Ioannoy helen367 13222 Athens -------
#     Helen Thanoy helen36 11132 Peristeri 9718345
#     Vasilis Mamalis vas32 12345 Dafni 9738383
#
# (β) cat: softlink: No such file or directory
#
# Το "ask1link" είναι σαν ένα αντίγραφο του αρχείου "ask1.txt" (hard link), ενώ το "softlink" είναι ένα μονοπάτι που οδηγεί στο "ask1.txt"
# και εφόσον δεν  υπάρχει το αρχείο "ask1.txt" δεν υπάρχει και το μονοπάτι (soft link).

rm ask1.txt
(α) cat ask1link
(β) cat softlink 

--------------------------------------------------------------------------------------------------------------------------------------------------
# Ερώτηση 8.
# Μπείτε στο αρχείο "ask1link" και διαγράψτε την τελευταία του γραμμή. Βεβαιωθείτε στη συνέχεια ότι η αλλαγή αυτή έχει γίνει και στο αρχείο 
# "ask1.txt".
#
# Απάντηση : Αρχικά, θα χρησιμοποιήσουμε την εντολή "vi ask1link" για να εισέλθουμε στο αρχείο και να διαγράψουμε την τελευταία του γρα-
# μμή. Έφοσον, το αποθηκεύσουμε, ελέγχουμε τα περιεχόμενα του με την εντολή "cat ask1link". Τονίζουμε ότι βρισκόμαστε στο μονοπάτι 
# "/Documents/Project1/testdir1".
#
# Αποτέλεσμα εκτέλεσης της τελευταίας εντολής :
# 
# George Pappas george2 12136 Peristeri -------
# Nick Nikolaoy nick23 12232 Aigaleo 5314555
# George Georgioy george583 11132 Athens -------
# Helen Georgioy helen3 12136 Peristeri 5748456
# Nick Pappas nick4 11223 Aigaleo 5324123
# Helen Ioannoy helen367 13222 Athens -------
# Helen Thanoy helen36 11132 Peristeri 9718345

vi ask1link
cat ask1link

# Για να βεβαιωθούμε στη συνέχεια ότι η αλλαγή αυτή έχει γίνει και στο αρχείο "ask1.txt" ελέγχουμε τα περιεχόμενά του με την εντολή "cat 
# ask1.txt". Πραγματι η αλλαγή έχει γίνει και σ' αυτό το αρχείο, καθώς, το "ask1link" είναι ο "hard link" του "ask1.txt", συνεπώς, ότι α-
# λλαγή γίνει στον "ask1link" θα γίνει αυτόματα και στον "ask1.txt" και αντιστρόφως.
#
# Αποτέλεσμα εκτέλεσης της εντολής :
# 
# George Pappas george2 12136 Peristeri -------
# Nick Nikolaoy nick23 12232 Aigaleo 5314555
# George Georgioy george583 11132 Athens -------
# Helen Georgioy helen3 12136 Peristeri 5748456
# Nick Pappas nick4 11223 Aigaleo 5324123
# Helen Ioannoy helen367 13222 Athens -------
# Helen Thanoy helen36 11132 Peristeri 9718345

cat ask1.txt

--------------------------------------------------------------------------------------------------------------------------------------------------
# Ερώτηση 9.
# Δημιουργήστε έναν κατάλογο "kat1" και μέσα σε αυτόν δύο αρχεία, "file1" και "file2", με περιεχόμενο τη λέξη "one" το ένα και τη λέξη "two" 
# το άλλο. Τρέξτε (μέσα στον κατάλογο kat1) την εντολή "cp *" και εξηγήστε το αποτέλεσμα. Στη συνέχεια τρέξτε την εντολή "mv *" και εξηγήστε 
# το αποτέλεσμα.
#
# Απάντηση : Αρχικά, θα χρησιμοποιήσουμε την εντολή "mkdir" για να δημιουργήσουμε τον κατάλογο ".Documents/Project1/kat1" και μεταβαίνουμε σε
# αυτόν με την εντολή "cd". Με την εντολή "vi" δημιουργούμε τα αρχεία "file1" και "file2" αντίστοιχα. Καταχωρούμε στα περιεχόμενα τις λέξεις 
# "one" και "two" στα αρχεία "file1" και "file2" αντίστοιχα. Βλέπουμε τα περιεχόμενα τους με τις εντολές (α) "cat file1" και (β) "cat file2".
#
# Αποτέλεσμα εκτέλεσης της τελευταίας εντολής :
#
# (α) one
# (β) two

mkdir kat1
cd ./Documents/Project1/kat1
vi file1
vi file2
(α) cat file1
(β) cat file2

# Στη συνέχεια εκτελούμε την εντολή "cp *" και τις εντολές (γ) "cat file1", (δ) "cat file2" για να παρατηρήσουμε τις διαφορές ως προς τα περιε-
# χόμενα των δύο αρχείων.
#
# Αποτέλεσμα εκτέλεσης της τελευταίας εντολής : 
# 
# (γ) one
# (δ) one

cp *
(γ) cat file1
(δ) cat file2

# Όπως παρατηρούμε, τα δύο αρχεία έχουν το ίδιο περιεχόμενο, τη λέξη "one". Η εντολή "cp *" ουσιαστικά είναι ίδια με την εντολή "cp file1 file2". 
# Ουσιαστικά, ο μεταχαρακτήρας "*" συνδύασε όλα τα στοιχεία που περιλαμβάνονται στον κατάλογο "kat1" (στην προκείμενη περίπτωση τα στοιχεία είναι 
# μόνο τα αρχεία "file1" και "file2") στην εντολή "cp" με πρώτο το αρχείο που τροποποιήθηκε πρώτο (file1). Επομένως, δημιουργήθηκε ένα αντίγραφο 
# αρχείο του "file1" με όνομα "file2" και από την στιγμή που υπήρχε ήδη στον τρέχοντα κατάλογο, απλά το "file2" απέκτησε τα περιεχόμενα του "file1".
#
# Τέλος εκτελούμε την εντολή "mv *" και τις εντολές (ε) "cat file1", (ζ) "cat file2" για να παρατηρήσουμε τις διαφορές ως προς τα περιεχόμενα των 
# δύο αρχείων.
#
# Αποτέλεσμα εκτέλεσης της τελευταίας εντολής : 
# 
# (ε) cat: file1: No such file or directory
# (ζ) one 
#

mv *
(ε) cat file1
(ζ) cat file2

# Όπως παρατηρούμε, το αρχείο "file1" δεν υπάρχει και το "file2" περιέχει το περιεχόμενο του "file1" τη λέξη "one"  Η εντολή "mv *" ουσιαστικά
# είναι ίδια με την εντολή "mv file1 file2". Ουσιαστικά, ο μεταχαρακτήρας "*" συνδύασε όλα τα στοιχεία που περιλαμβάνονται στον κατάλογο "kat1"
# (στην προκείμενη περίπτωση τα στοιχεία είναι μόνο τα αρχεία "file1" και "file2") στην εντολή "mv" με πρώτο το αρχείο που τροποποιήθηκε πρώτο 
# (file1). Επομένως, το αρχείο "file1" μετανομάστηκε σε "file2" και τα περιεχόμενα του μεταβιβάστηκαν σε αυτό (η λέξη "one") με συνέπεια να δια-
# γραφεί το πρώτο αρχείο "file1".

--------------------------------------------------------------------------------------------------------------------------------------------------
# Ερώτηση 10. 
# Εμφανίστε τις γραμμές του αρχείου "ask1.txt" οι οποίες τελειώνουν με ένα ή περισσότερα συνεχόμενα ψηφία.
#
# Απάντηση : Θα χρησιμοποιήσουμε την εντολή "grep" με παράμετρο "-Ε" και ορίσματα "[0-9]+$". Τονίζουμε ότι ο τρέχοντας κατάλογος είναι ο "./Documents
# /Project1/testdir1". Πιο αναλυτικά, η παράμετρος "-E" χρησιμοποιείται για εκτεταμένες εκφράσεις και το όρισμα "[0-9]+$" δηλώνει ότι πρόκειται να ε-
# μφανίσει τις γραμμές του αρχείου "ask1.txt" που τελειώνουν ($) με ένα ή περισσότερα συνεχόμενα ψηφία (+).
#
# Αποτέλεσμα εκτέλεσης της εντολής :
#
# Nick Nikolaoy nick23 12232 Aigaleo 5314555
# Helen Georgioy helen3 12136 Peristeri 5748456
# Nick Pappas nick4 11223 Aigaleo 5324123
# Helen Thanoy helen36 11132 Peristeri 9718345

grep -E "[0-9]+$" ./Documents/Project1/testdir1/ask1.txt

--------------------------------------------------------------------------------------------------------------------------------------------------
# Ερώτηση 11.
# Εμφανίστε τις γραμμές του αρχείου "ask1.txt" οι οποίες περιέχουν μεν το πρότυπο "Pap" αλλά δεν περιέχουν το πρότυπο "Aig".
#
# Απάντηση : Αρχικά, μεταβαίνουμε στον κατάλογο που βρίσκεται το αρχείο με όνομα "ask1.txt" με την εντολή "cd" και μονοπάτι "./Documents/Project1
# /testdir1". Θα χρησιμοποιήσουμε την εντολή "|" (σωλήνωση) για να χρησιμοποιήσουμε δύο εντολές. Πρώτον, την εντολή "grep" με παράμετρο "-E" για 
# αναζήτηση εκτεταμένων εκφράσεων και πρότυπο "Pap", για να εμφανιστούν οι γραμμές του αρχείου "ask1.txt", που περιέχουν το πρότυπο "Pap". Δεύτε-
# ρον, την εντολή "grep" με παράμετρο "-Ev" για αναζήτηση εκτεταμένων εκφράσεων (-E) και γραμμών που δεν περιέχουν το χαρακτηριστικό πρότυπο (-v) 
# και πρότυπο "Aig", για να εμφανιστούν οι γραμμές του αρχείου "ask1.txt", που δεν περιέχουν το πρότυπο "Aig". Συνεπώς, με την εντολή της σωλήνω-
# σης (|) εμφανίζονται οι γραμμές του αρχείου "ask1.txt" που περιέχουν το πρότυπο "Pap" και ταυτόχρονα δεν περιέχουν το πρότυπο "Aig".
#
#  Αποτέλεσμα εκτέλεσης της τελευταίας εντολής :
# 
#  George Pappas george2 12136 Peristeri -------

cd ./Documents/Project1/testdir1
grep -E "Pap" ask1.txt | grep -Ev "Aig"

--------------------------------------------------------------------------------------------------------------------------------------------------
# Ερώτηση 12.
# Εμφανίστε τις γραμμές του αρχείου "ask1.txt" οι οποίες δεν αρχίζουν με "G" ή "N" και περιέχουν εν συνεχεία (κάπου στα περιεχόμενά τους) τα πρότυ-
# πα "Geo" και "Per" με αυτή τη σειρά.
#
# Απάντηση : Αρχικά, μεταβαίνουμε στον κατάλογο που βρίσκεται το αρχείο με όνομα "ask1.txt" με την εντολή "cd" και μονοπάτι "./Documents/Project1
# /testdir1". Θα χρησιμοποιήσουμε την εντολή "|" (σωλήνωση) για να χρησιμοποιήσουμε τρεις εντολές. Πρώτον, την εντολή "grep" με παράμετρο "-Ev" 
# για αναζήτηση εκτεταμένων εκφράσεων (-E) και γραμμών που δεν περιέχουν το χαρακτηριστικό πρότυπο (-v) και πρότυπο "^[G,N]", για να εμφανιστούν 
# οι γραμμές του αρχείου "ask1.txt", που δεν περιέχουν τον χαρακτήρα "G" ή "N" στην αρχή της γραμμή (μεταχαρακτήρας ^). Δεύτερον, την εντολή "grep" 
# με παράμετρο "-E" για αναζήτηση εκτεταμένων εκφράσεων και πρότυπο "Geo", για να εμφανιστούν οι γραμμές του αρχείου "ask1.txt", που περιέχουν το 
# πρότυπο "Geo". Τρίτον, την εντολή "grep" με παράμετρο "-E" αναζήτηση εκτεταμένων εκφράσεων και πρότυπο "Per", για να εμφανιστούν οι γραμμές του 
# αρχείου "ask1.txt", που περιέχουν το πρότυπο "Per". Συνεπώς, με την εντολή της σωλήνωσης (|) εμφανίζονται οι γραμμές του αρχείου "ask1.txt", που
# δεν ξεκινάνε με τον χαρακτήρα "G" ή "Ν" και ταυτόχρονα έχουν στα περιεχόμενα τους με την σειρά τα πρότυπα "Geo" και "Per".
#
# Αποτέλεσμα εκτέλεσης της τελευταίας εντολής :
#
# Helen Georgioy helen3 12136 Peristeri 5748456

cd ./Documents/Project1/testdir1
grep -Ev "^[G,N]" ask1.txt | grep -E "Geo" | grep -E "Per"

--------------------------------------------------------------------------------------------------------------------------------------------------
# Ερώτηση 13.
# Πόσοι χρήστες που το username τους δεν αρχίζει από "ls1" είναι συνδεδεμένοι στο σύστημα;
#
# Απάντηση: Θα χρησιμοποιήσουμε την εντολή "|" (σωλήνωση) για να χρησιμοποιήσουμε δύο εντολές. Πρώτον, την εντολή "who" που εμφανίζει ποιοι χρήστες 
# είναι συνδεδεμένοι στο σύστημα. Δεύτερον, την εντολή "grep" με παράμετρο "-Ev" για αναζήτηση εκτεταμένων εκφράσεων (-E) και γραμμών που δεν περιέ-
# χουν το χαρακτηριστικό πρότυπο (-v) και πρότυπο "^ls1", για να εμφανιστούν οι χρήστες που το όνομα τους δεν ξεκινάει με το πρότυπο "ls1" (μεταχαρα-
# κτήρας ^). Συνεπώς, με την εντολή της σωλήνωσης (|), εμφανίζονται οι χρήστες που είναι συνδεδεμένοι στο σύστημα και το όνομα τους δεν αρχίζει από
# "ls1".
#
# Αποτέλεσμα εκτέλεσης της εντολής : 
#
# ice19390005 :0           2021-12-22 15:27 (:0)

who | grep -Ev ^ls1

--------------------------------------------------------------------------------------------------------------------------------------------------
# Ερώτηση 14. 
# Εμφανίστε όλες τις διεργασίες χρηστών (αλλ/σης) που τρέχουν αυτή τη στιγμή στο σύστημα.
#
# Απάντηση: Θα χρησιμοποιήσουμε την εντολή "ps" με παραμέτρους "-ef", όπου εμφανίζονται όλες οι διεργασίες όλων των χρηστών που είναι συνδεδεμένοι
# στο σύστημα (-e) και με πληροφορίες για τις διεργασίες του κάθε χρήστη (-f). 
#
# Αποτέλεσμα εκτέλεσης της εντολής :
# 
# UID          PID    PPID  C STIME TTY          TIME CMD
# root           1       0  0 15:27 ?        00:00:01 /sbin/init splash
# root           2       0  0 15:27 ?        00:00:00 [kthreadd]
# root           3       2  0 15:27 ?        00:00:00 [rcu_gp]
# root           4       2  0 15:27 ?        00:00:00 [rcu_par_gp]
# root           6       2  0 15:27 ?        00:00:00 [kworker/0:0H-events_highpr
# root           9       2  0 15:27 ?        00:00:00 [mm_percpu_wq]
# root          10       2  0 15:27 ?        00:00:00 [rcu_tasks_rude_]
# root          11       2  0 15:27 ?        00:00:00 [rcu_tasks_trace]
# root          12       2  0 15:27 ?        00:00:00 [ksoftirqd/0]
# root          13       2  0 15:27 ?        00:00:01 [rcu_sched]
# root          14       2  0 15:27 ?        00:00:00 [migration/0]
# root          15       2  0 15:27 ?        00:00:00 [idle_inject/0]
# root          16       2  0 15:27 ?        00:00:00 [cpuhp/0]
# root          17       2  0 15:27 ?        00:00:00 [cpuhp/1]
# root          18       2  0 15:27 ?        00:00:00 [idle_inject/1]
# root          19       2  0 15:27 ?        00:00:00 [migration/1]
# root          20       2  0 15:27 ?        00:00:00 [ksoftirqd/1]
# root          22       2  0 15:27 ?        00:00:00 [kworker/1:0H-events_highpr
# root          23       2  0 15:27 ?        00:00:00 [cpuhp/2]
# root          24       2  0 15:27 ?        00:00:00 [idle_inject/2]
# root          25       2  0 15:27 ?        00:00:00 [migration/2]
# root          26       2  0 15:27 ?        00:00:00 [ksoftirqd/2]
# root          28       2  0 15:27 ?        00:00:00 [kworker/2:0H-events_highpr
# root          29       2  0 15:27 ?        00:00:00 [cpuhp/3]
# root          30       2  0 15:27 ?        00:00:00 [idle_inject/3]
# root          31       2  0 15:27 ?        00:00:00 [migration/3]
# root          32       2  0 15:27 ?        00:00:00 [ksoftirqd/3]
# root          34       2  0 15:27 ?        00:00:00 [kworker/3:0H-kblockd]
# root          35       2  0 15:27 ?        00:00:00 [kdevtmpfs]
# root          36       2  0 15:27 ?        00:00:00 [netns]
# root          37       2  0 15:27 ?        00:00:00 [inet_frag_wq]
# root          38       2  0 15:27 ?        00:00:00 [kauditd]
# root          39       2  0 15:27 ?        00:00:00 [khungtaskd]
# root          40       2  0 15:27 ?        00:00:00 [oom_reaper]
# root          41       2  0 15:27 ?        00:00:00 [writeback]
# root          42       2  0 15:27 ?        00:00:00 [kcompactd0]
# root          43       2  0 15:27 ?        00:00:00 [ksmd]
# root          44       2  0 15:27 ?        00:00:00 [khugepaged]
# root          91       2  0 15:27 ?        00:00:00 [kintegrityd]
# root          92       2  0 15:27 ?        00:00:00 [kblockd]
# root          93       2  0 15:27 ?        00:00:00 [blkcg_punt_bio]
# root          94       2  0 15:27 ?        00:00:00 [tpm_dev_wq]
# root          95       2  0 15:27 ?        00:00:00 [ata_sff]
# root          96       2  0 15:27 ?        00:00:00 [md]
# root          97       2  0 15:27 ?        00:00:00 [edac-poller]
# root          98       2  0 15:27 ?        00:00:00 [devfreq_wq]
# root         100       2  0 15:27 ?        00:00:00 [watchdogd]
# root         103       2  0 15:27 ?        00:00:00 [kworker/2:1H-kblockd]
# root         105       2  0 15:27 ?        00:00:00 [kswapd0]
# root         106       2  0 15:27 ?        00:00:00 [ecryptfs-kthrea]
# root         108       2  0 15:27 ?        00:00:00 [kthrotld]
# root         109       2  0 15:27 ?        00:00:00 [acpi_thermal_pm]
# root         110       2  0 15:27 ?        00:00:00 [scsi_eh_0]
# root         111       2  0 15:27 ?        00:00:00 [scsi_tmf_0]
# root         112       2  0 15:27 ?        00:00:00 [scsi_eh_1]
# root         113       2  0 15:27 ?        00:00:00 [scsi_tmf_1]
# root         115       2  0 15:27 ?        00:00:00 [vfio-irqfd-clea]
# root         117       2  0 15:27 ?        00:00:00 [ipv6_addrconf]
# root         126       2  0 15:27 ?        00:00:00 [kstrp]
# root         129       2  0 15:27 ?        00:00:00 [zswap-shrink]
# root         130       2  0 15:27 ?        00:00:00 [kworker/u9:0]
# root         135       2  0 15:27 ?        00:00:00 [charger_manager]
# root         137       2  0 15:27 ?        00:00:00 [kworker/3:1H-kblockd]
# root         160       2  0 15:27 ?        00:00:00 [kworker/0:1H-kblockd]
# root         188       2  0 15:27 ?        00:00:00 [scsi_eh_2]
# root         189       2  0 15:27 ?        00:00:00 [scsi_tmf_2]
# root         191       2  0 15:27 ?        00:00:00 [kworker/1:1H-kblockd]
# root         212       2  0 15:27 ?        00:00:00 [jbd2/sda5-8]
# root         213       2  0 15:27 ?        00:00:00 [ext4-rsv-conver]
# root         253       1  0 15:27 ?        00:00:00 /lib/systemd/systemd-journa
# root         277       2  0 15:27 ?        00:00:00 [irq/18-vmwgfx]
# root         278       2  0 15:27 ?        00:00:00 [ttm_swap]
# root         279       2  0 15:27 ?        00:00:00 [card0-crtc0]
# root         280       2  0 15:27 ?        00:00:00 [card0-crtc1]
# root         281       2  0 15:27 ?        00:00:00 [card0-crtc2]
# root         282       2  0 15:27 ?        00:00:00 [card0-crtc3]
# root         283       2  0 15:27 ?        00:00:00 [card0-crtc4]
# root         284       2  0 15:27 ?        00:00:00 [card0-crtc5]
# root         285       2  0 15:27 ?        00:00:00 [card0-crtc6]
# root         286       2  0 15:27 ?        00:00:00 [card0-crtc7]
# root         287       2  0 15:27 ?        00:00:00 [loop0]
# root         293       2  0 15:27 ?        00:00:00 [loop1]
# root         298       2  0 15:27 ?        00:00:00 [loop2]
# root         302       1  0 15:27 ?        00:00:00 /lib/systemd/systemd-udevd
# root         306       2  0 15:27 ?        00:00:00 [loop3]
# root         307       2  0 15:27 ?        00:00:00 [loop4]
# root         309       2  0 15:27 ?        00:00:00 [loop5]
# root         310       2  0 15:27 ?        00:00:00 [loop6]
# root         311       2  0 15:27 ?        00:00:00 [loop7]
# root         312       2  0 15:27 ?        00:00:00 [loop8]
# root         314       2  0 15:27 ?        00:00:00 [loop9]
# root         315       2  0 15:27 ?        00:00:00 [loop10]
# root         330       2  0 15:27 ?        00:00:00 [loop11]
# root         344       2  0 15:27 ?        00:00:00 [loop12]
# root         345       2  0 15:27 ?        00:00:00 [loop13]
# root         372       2  0 15:27 ?        00:00:00 [cryptd]
# systemd+     569       1  0 15:27 ?        00:00:00 /lib/systemd/systemd-resolv
# systemd+     570       1  0 15:27 ?        00:00:00 /lib/systemd/systemd-timesy
# root         602       1  0 15:27 ?        00:00:00 /usr/lib/accountsservice/ac
# root         603       1  0 15:27 ?        00:00:00 /usr/sbin/acpid
# avahi        606       1  0 15:27 ?        00:00:00 avahi-daemon: running [Ath.
# root         607       1  0 15:27 ?        00:00:00 /usr/sbin/cron -f
# message+     609       1  0 15:27 ?        00:00:00 /usr/bin/dbus-daemon --syst
# root         610       1  0 15:27 ?        00:00:00 /usr/sbin/NetworkManager --
# root         618       1  0 15:27 ?        00:00:00 /usr/sbin/irqbalance --fore
# root         619       1  0 15:27 ?        00:00:00 /usr/bin/python3 /usr/bin/n
# root         622       1  0 15:27 ?        00:00:00 /usr/lib/policykit-1/polkit
# syslog       627       1  0 15:27 ?        00:00:00 /usr/sbin/rsyslogd -n -iNON
# root         631       1  0 15:27 ?        00:00:01 /usr/lib/snapd/snapd
# root         633       1  0 15:27 ?        00:00:00 /usr/libexec/switcheroo-con
# root         639       1  0 15:27 ?        00:00:00 /lib/systemd/systemd-logind
# root         642       1  0 15:27 ?        00:00:00 /usr/lib/udisks2/udisksd
# root         643       1  0 15:27 ?        00:00:00 /sbin/wpa_supplicant -u -s 
# avahi        651     606  0 15:27 ?        00:00:00 avahi-daemon: chroot helper
# root         697       1  0 15:27 ?        00:00:00 /usr/sbin/cupsd -l
# root         713       1  0 15:27 ?        00:00:00 /usr/sbin/cups-browsed
# root         720       1  0 15:27 ?        00:00:00 /usr/sbin/ModemManager --fi
# root         728       1  0 15:27 ?        00:00:00 /usr/bin/python3 /usr/share
# root         746       1  0 15:27 ?        00:00:00 /usr/sbin/gdm3
# root         757     746  0 15:27 ?        00:00:00 gdm-session-worker [pam/gdm
# whoopsie     772       1  0 15:27 ?        00:00:00 /usr/bin/whoopsie -f
# kernoops     777       1  0 15:27 ?        00:00:00 /usr/sbin/kerneloops --test
# kernoops     780       1  0 15:27 ?        00:00:00 /usr/sbin/kerneloops
# ice1939+     830       1  0 15:27 ?        00:00:01 /lib/systemd/systemd --user
# ice1939+     831     830  0 15:27 ?        00:00:00 (sd-pam)
# ice1939+     844     830  0 15:27 ?        00:00:00 /usr/bin/pulseaudio --daemo
# ice1939+     846     830  0 15:27 ?        00:00:00 /usr/libexec/tracker-miner-
# ice1939+     851       1  0 15:27 ?        00:00:00 /usr/bin/gnome-keyring-daem
# ice1939+     858     757  0 15:27 tty2     00:00:00 /usr/lib/gdm3/gdm-x-session
# ice1939+     860     858  0 15:27 tty2     00:01:01 /usr/lib/xorg/Xorg vt2 -dis
# rtkit        862       1  0 15:27 ?        00:00:00 /usr/libexec/rtkit-daemon
# ice1939+     868     830  0 15:27 ?        00:00:01 /usr/bin/dbus-daemon --sess
# ice1939+     895     830  0 15:27 ?        00:00:00 /usr/libexec/gvfsd
# ice1939+     903     830  0 15:27 ?        00:00:00 /usr/libexec/gvfsd-fuse /ru
# ice1939+     911     830  0 15:27 ?        00:00:00 /usr/libexec/gvfs-udisks2-v
# ice1939+     919     830  0 15:27 ?        00:00:00 /usr/libexec/gvfs-mtp-volum
# ice1939+     923     830  0 15:27 ?        00:00:00 /usr/libexec/gvfs-afc-volum
# ice1939+     938     830  0 15:27 ?        00:00:00 /usr/libexec/gvfs-gphoto2-v
# ice1939+     943     830  0 15:27 ?        00:00:00 /usr/libexec/gvfs-goa-volum
# ice1939+     947     830  0 15:27 ?        00:00:02 /usr/libexec/goa-daemon
# ice1939+     991     830  0 15:27 ?        00:00:00 /usr/libexec/goa-identity-s
# root         996       1  0 15:27 ?        00:00:00 /usr/lib/upower/upowerd
# ice1939+    1013     858  0 15:27 tty2     00:00:00 /usr/libexec/gnome-session-
# ice1939+    1085    1013  0 15:27 ?        00:00:00 /usr/bin/ssh-agent /usr/bin
# ice1939+    1117     830  0 15:27 ?        00:00:00 /usr/libexec/at-spi-bus-lau
# ice1939+    1122    1117  0 15:27 ?        00:00:00 /usr/bin/dbus-daemon --conf
# ice1939+    1153     830  0 15:27 ?        00:00:00 /usr/bin/gnome-keyring-daem
# ice1939+    1154     830  0 15:27 ?        00:00:00 /usr/libexec/gnome-session-
# ice1939+    1163     830  0 15:27 ?        00:00:00 /usr/libexec/gnome-session-
# ice1939+    1178     830  0 15:27 ?        00:00:00 /usr/libexec/at-spi2-regist
# ice1939+    1191     830  1 15:27 ?        00:02:20 /usr/bin/gnome-shell
# ice1939+    1222    1191  0 15:27 ?        00:00:00 ibus-daemon --panel disable
# ice1939+    1226    1222  0 15:27 ?        00:00:00 /usr/libexec/ibus-memconf
# ice1939+    1227    1222  0 15:27 ?        00:00:01 /usr/libexec/ibus-extension
# ice1939+    1229     830  0 15:27 ?        00:00:00 /usr/libexec/ibus-x11 --kil
# ice1939+    1235     830  0 15:27 ?        00:00:00 /usr/libexec/ibus-portal
# ice1939+    1245     830  0 15:27 ?        00:00:00 /usr/libexec/xdg-permission
# ice1939+    1250     830  0 15:27 ?        00:00:00 /usr/libexec/gnome-shell-ca
# ice1939+    1258     830  0 15:27 ?        00:00:00 /usr/libexec/evolution-sour
# ice1939+    1269     830  0 15:27 ?        00:00:00 /usr/libexec/dconf-service
# ice1939+    1272     830  0 15:27 ?        00:00:00 /usr/libexec/gvfsd-metadata
# ice1939+    1284     830  0 15:27 ?        00:00:00 /usr/libexec/evolution-cale
# ice1939+    1294     830  0 15:27 ?        00:00:00 /usr/bin/gjs /usr/share/gno
# ice1939+    1314     895  0 15:27 ?        00:00:00 /usr/libexec/gvfsd-trash --
# ice1939+    1325     830  0 15:27 ?        00:00:00 /usr/libexec/evolution-addr
# ice1939+    1328     830  0 15:27 ?        00:00:00 /usr/libexec/gsd-a11y-setti
# ice1939+    1329     830  0 15:27 ?        00:00:00 /usr/libexec/gsd-color
# ice1939+    1330     830  0 15:27 ?        00:00:00 /usr/libexec/gsd-datetime
# ice1939+    1332     830  0 15:27 ?        00:00:00 /usr/libexec/gsd-housekeepi
# ice1939+    1333     830  0 15:27 ?        00:00:00 /usr/libexec/gsd-keyboard
# ice1939+    1335     830  0 15:27 ?        00:00:00 /usr/libexec/gsd-media-keys
# ice1939+    1336     830  0 15:27 ?        00:00:00 /usr/libexec/gsd-power
# ice1939+    1338     830  0 15:27 ?        00:00:00 /usr/libexec/gsd-print-noti
# ice1939+    1339     830  0 15:27 ?        00:00:00 /usr/libexec/gsd-rfkill
# ice1939+    1340     830  0 15:27 ?        00:00:00 /usr/libexec/gsd-screensave
# ice1939+    1341     830  0 15:27 ?        00:00:00 /usr/libexec/gsd-sharing
# ice1939+    1342     830  0 15:27 ?        00:00:00 /usr/libexec/gsd-smartcard
# ice1939+    1343     830  0 15:27 ?        00:00:00 /usr/libexec/gsd-sound
# ice1939+    1344     830  0 15:27 ?        00:00:00 /usr/libexec/gsd-usb-protec
# ice1939+    1345     830  0 15:27 ?        00:00:00 /usr/libexec/gsd-wacom
# ice1939+    1346     830  0 15:27 ?        00:00:00 /usr/libexec/gsd-wwan
# ice1939+    1350     830  0 15:27 ?        00:00:00 /usr/libexec/gsd-xsettings
# ice1939+    1376     830  0 15:27 ?        00:00:00 /usr/libexec/gsd-printer
# ice1939+    1388    1163  0 15:27 ?        00:00:00 /usr/libexec/gsd-disk-utili
# ice1939+    1392    1163  0 15:27 ?        00:00:00 /usr/libexec/evolution-data
# ice1939+    1414    1222  0 15:27 ?        00:00:00 /usr/libexec/ibus-engine-si
# colord      1476       1  0 15:27 ?        00:00:00 /usr/libexec/colord
# ice1939+    1568    1163  0 15:28 ?        00:00:00 update-notifier
# ice1939+    1806     830  0 15:32 ?        00:01:22 /usr/lib/firefox/firefox -n
# ice1939+    1866    1806  0 15:32 ?        00:00:00 /usr/lib/firefox/firefox -c
# ice1939+    1909    1806  0 15:32 ?        00:00:00 /usr/lib/firefox/firefox -c
# ice1939+    1982    1806  0 15:32 ?        00:00:00 /usr/lib/firefox/firefox -c
# ice1939+    2012     830  0 15:32 ?        00:00:16 /usr/bin/nautilus --gapplic
# ice1939+    2042    1806  1 15:32 ?        00:02:23 /usr/lib/firefox/firefox -c
# ice1939+    2044    1806  0 15:32 ?        00:00:00 /usr/lib/firefox/firefox -c
# ice1939+    2068    1806  0 15:32 ?        00:00:00 /usr/lib/firefox/firefox -c
# ice1939+    2329     830  0 15:51 ?        00:00:17 /usr/libexec/gnome-terminal
# ice1939+    2337    2329  0 15:51 pts/0    00:00:00 bash
# root        3030       2  0 16:54 ?        00:00:00 [kworker/u8:2-ext4-rsv-conv
# ice1939+    3092    1806  0 16:56 ?        00:00:00 /usr/lib/firefox/firefox -c
# ice1939+    3112    1806  0 16:56 ?        00:00:00 /usr/lib/firefox/firefox -c
# root        3125       2  0 16:56 ?        00:00:00 [kworker/2:3-events]
# root        3314       2  0 17:15 ?        00:00:00 [kworker/0:0-events]
# root        3519       2  0 17:39 ?        00:00:00 [kworker/3:1-events]
# root        3707       2  0 18:00 ?        00:00:00 [kworker/2:1-mm_percpu_wq]
# root        3729       2  0 18:04 ?        00:00:00 [kworker/1:0-cgroup_destroy
# root        3789       2  0 18:16 ?        00:00:00 [kworker/u8:1-events_power_
# root        3791       2  0 18:16 ?        00:00:00 [kworker/1:1-events]
# root        3794       2  0 18:16 ?        00:00:00 [kworker/0:1-events]
# root        3811       2  0 18:20 ?        00:00:00 [kworker/u8:3+events_unboun
# root        3818       1  0 18:21 ?        00:00:00 /usr/libexec/fwupd/fwupd
# root        3854       2  0 18:21 ?        00:00:00 [kworker/3:0-events]
# root        3894       2  0 18:30 ?        00:00:00 [kworker/1:2-events]
# root        3899       2  0 18:32 ?        00:00:00 [kworker/u8:0-events_unboun
# ice1939+    3937    2337  0 18:35 pts/0    00:00:00 ps -ef

ps -ef

--------------------------------------------------------------------------------------------------------------------------------------------------
# Ερώτηση 15.
# Πόσες διεργασίες χρηστών (αλλ/σης) τρέχουν στο σύστημα και τελειώνει το όνομά τους με "sh";
#
# Απάντηση : Οι διεργασίες χρηστών που τρέχουν στο σύστημα και τελείωνει το όνομά τους με "sh" είναι "2". Θα χρησιμοποιήσουμε την εντολή σωλήνωσης 
# "|" για να χρησιμοποιήσουμε τρεις εντολές. Πρώτον, την εντολή "ps" με παραμέτρους "-eaf", όπου εμφανίζονται όλες οι διεργασίες όλων των χρηστών που
# είναι συνδεδεμένοι στο σύστημα (-ea) και με τα "inodes" του κάθε χρήστης (-f). Δεύτερον, την εντολή "grep" με παράμετρο "sh$", όπου εμφανίζονται ό-
# λες οι διεργασίες που το όνομα τους τελείωνει με το πρότυπο "sh" (μεταχαρακτήρας $). Τρίτον, την εντολή "wc" με παράμετρο "-l", όπου θα εμφανίσει το
# πλήθος των γραμμών του αποτελέσματος της εντολής "grep", δηλαδή, το πλήθος των διεργασιών χρηστών που το όνομα τους τελειώνε με το πρότυπο "sh". Συ-
# νεπώς, με την εντολή διασωλήνωσης "|" εμφανίζεται το πλήθος των διεργασιών όλων των χρηστών που τρέχουν στο σύστημα και το όνομα τους τελειώνε με 
# "sh".
#
# Αποτέλεσμα εκτέλεσης της εντολής : 
#
# root           1       0  0 15:27 ?        00:00:01 /sbin/init splash
# ice1939+    2337    2329  0 15:51 pts/0    00:00:00 bash

ps -eaf | grep sh$


# Αποτέλεσμα εκτέλεσης της εντολής : 
#
# 2

ps -eaf | grep sh$ | wc -l

--------------------------------------------------------------------------------------------------------------------------------------------------
# Ερώτηση 16.
# Ποιες διεργασίες (πάσης μορφής) τρέχουν αυτή τη στιγμή από το λογαριασμό του διαχειριστή;
#
# Απάντηση : Θα χρησιμοποιήσουμε την εντολή σωλήνωσης "|" για να χρησιμοποιήσουμε δύο εντολές. Πρώτον, την εντολή "ps" με παραμέτρους "-ef", όπου ε-
# μφανίζονται όλες οι διεργασίες όλων των χρηστών που είναι συνδεδεμένοι στο σύστημα (-e) και με πληροφορίες για τις διεργασίες του κάθε χρήστη (-f).
# Δεύτερον, την εντολή "grep" με παράμετρο "^root", όπου εμφανίζονται όλες οι διεργασίες που το όνομα τους αρχίζει με το πρότυπο "root" (μεταχαρακτή-
# ρας $). Συνεπώς, με την εντολή διασωλήνωσης "|" εμφανίζονται όλες οι διεργασίες που τρέχουν αυτή τη στιγμή από το λογαριασμό του διαχειριστή (root).
#
# Αποτέλεσμα εκτέλεσης της εντολής :
# 
# root           1       0  0 15:27 ?        00:00:01 /sbin/init splash
# root           2       0  0 15:27 ?        00:00:00 [kthreadd]
# root           3       2  0 15:27 ?        00:00:00 [rcu_gp]
# root           4       2  0 15:27 ?        00:00:00 [rcu_par_gp]
# root           6       2  0 15:27 ?        00:00:00 [kworker/0:0H-events_highpri]
# root           9       2  0 15:27 ?        00:00:00 [mm_percpu_wq]
# root          10       2  0 15:27 ?        00:00:00 [rcu_tasks_rude_]
# root          11       2  0 15:27 ?        00:00:00 [rcu_tasks_trace]
# root          12       2  0 15:27 ?        00:00:00 [ksoftirqd/0]
# root          13       2  0 15:27 ?        00:00:02 [rcu_sched]
# root          14       2  0 15:27 ?        00:00:00 [migration/0]
# root          15       2  0 15:27 ?        00:00:00 [idle_inject/0]
# root          16       2  0 15:27 ?        00:00:00 [cpuhp/0]
# root          17       2  0 15:27 ?        00:00:00 [cpuhp/1]
# root          18       2  0 15:27 ?        00:00:00 [idle_inject/1]
# root          19       2  0 15:27 ?        00:00:00 [migration/1]
# root          20       2  0 15:27 ?        00:00:00 [ksoftirqd/1]
# root          22       2  0 15:27 ?        00:00:00 [kworker/1:0H-events_highpri]
# root          23       2  0 15:27 ?        00:00:00 [cpuhp/2]
# root          24       2  0 15:27 ?        00:00:00 [idle_inject/2]
# root          25       2  0 15:27 ?        00:00:00 [migration/2]
# root          26       2  0 15:27 ?        00:00:00 [ksoftirqd/2]
# root          28       2  0 15:27 ?        00:00:00 [kworker/2:0H-events_highpri]
# root          29       2  0 15:27 ?        00:00:00 [cpuhp/3]
# root          30       2  0 15:27 ?        00:00:00 [idle_inject/3]
# root          31       2  0 15:27 ?        00:00:00 [migration/3]
# root          32       2  0 15:27 ?        00:00:00 [ksoftirqd/3]
# root          34       2  0 15:27 ?        00:00:00 [kworker/3:0H-kblockd]
# root          35       2  0 15:27 ?        00:00:00 [kdevtmpfs]
# root          36       2  0 15:27 ?        00:00:00 [netns]
# root          37       2  0 15:27 ?        00:00:00 [inet_frag_wq]
# root          38       2  0 15:27 ?        00:00:00 [kauditd]
# root          39       2  0 15:27 ?        00:00:00 [khungtaskd]
# root          40       2  0 15:27 ?        00:00:00 [oom_reaper]
# root          41       2  0 15:27 ?        00:00:00 [writeback]
# root          42       2  0 15:27 ?        00:00:00 [kcompactd0]
# root          43       2  0 15:27 ?        00:00:00 [ksmd]
# root          44       2  0 15:27 ?        00:00:00 [khugepaged]
# root          91       2  0 15:27 ?        00:00:00 [kintegrityd]
# root          92       2  0 15:27 ?        00:00:00 [kblockd]
# root          93       2  0 15:27 ?        00:00:00 [blkcg_punt_bio]
# root          94       2  0 15:27 ?        00:00:00 [tpm_dev_wq]
# root          95       2  0 15:27 ?        00:00:00 [ata_sff]
# root          96       2  0 15:27 ?        00:00:00 [md]
# root          97       2  0 15:27 ?        00:00:00 [edac-poller]
# root          98       2  0 15:27 ?        00:00:00 [devfreq_wq]
# root         100       2  0 15:27 ?        00:00:00 [watchdogd]
# root         103       2  0 15:27 ?        00:00:00 [kworker/2:1H-kblockd]
# root         105       2  0 15:27 ?        00:00:00 [kswapd0]
# root         106       2  0 15:27 ?        00:00:00 [ecryptfs-kthrea]
# root         108       2  0 15:27 ?        00:00:00 [kthrotld]
# root         109       2  0 15:27 ?        00:00:00 [acpi_thermal_pm]
# root         110       2  0 15:27 ?        00:00:00 [scsi_eh_0]
# root         111       2  0 15:27 ?        00:00:00 [scsi_tmf_0]
# root         112       2  0 15:27 ?        00:00:00 [scsi_eh_1]
# root         113       2  0 15:27 ?        00:00:00 [scsi_tmf_1]
# root         115       2  0 15:27 ?        00:00:00 [vfio-irqfd-clea]
# root         117       2  0 15:27 ?        00:00:00 [ipv6_addrconf]
# root         126       2  0 15:27 ?        00:00:00 [kstrp]
# root         129       2  0 15:27 ?        00:00:00 [zswap-shrink]
# root         130       2  0 15:27 ?        00:00:00 [kworker/u9:0]
# root         135       2  0 15:27 ?        00:00:00 [charger_manager]
# root         137       2  0 15:27 ?        00:00:00 [kworker/3:1H-kblockd]
# root         160       2  0 15:27 ?        00:00:00 [kworker/0:1H-kblockd]
# root         188       2  0 15:27 ?        00:00:00 [scsi_eh_2]
# root         189       2  0 15:27 ?        00:00:00 [scsi_tmf_2]
# root         191       2  0 15:27 ?        00:00:00 [kworker/1:1H-kblockd]
# root         212       2  0 15:27 ?        00:00:00 [jbd2/sda5-8]
# root         213       2  0 15:27 ?        00:00:00 [ext4-rsv-conver]
# root         253       1  0 15:27 ?        00:00:00 /lib/systemd/systemd-journald
# root         277       2  0 15:27 ?        00:00:01 [irq/18-vmwgfx]
# root         278       2  0 15:27 ?        00:00:00 [ttm_swap]
# root         279       2  0 15:27 ?        00:00:00 [card0-crtc0]
# root         280       2  0 15:27 ?        00:00:00 [card0-crtc1]
# root         281       2  0 15:27 ?        00:00:00 [card0-crtc2]
# root         282       2  0 15:27 ?        00:00:00 [card0-crtc3]
# root         283       2  0 15:27 ?        00:00:00 [card0-crtc4]
# root         284       2  0 15:27 ?        00:00:00 [card0-crtc5]
# root         285       2  0 15:27 ?        00:00:00 [card0-crtc6]
# root         286       2  0 15:27 ?        00:00:00 [card0-crtc7]
# root         287       2  0 15:27 ?        00:00:00 [loop0]
# root         293       2  0 15:27 ?        00:00:00 [loop1]
# root         298       2  0 15:27 ?        00:00:00 [loop2]
# root         302       1  0 15:27 ?        00:00:00 /lib/systemd/systemd-udevd
# root         306       2  0 15:27 ?        00:00:00 [loop3]
# root         307       2  0 15:27 ?        00:00:00 [loop4]
# root         309       2  0 15:27 ?        00:00:00 [loop5]
# root         310       2  0 15:27 ?        00:00:00 [loop6]
# root         311       2  0 15:27 ?        00:00:00 [loop7]
# root         312       2  0 15:27 ?        00:00:00 [loop8]
# root         314       2  0 15:27 ?        00:00:00 [loop9]
# root         315       2  0 15:27 ?        00:00:00 [loop10]
# root         330       2  0 15:27 ?        00:00:00 [loop11]
# root         344       2  0 15:27 ?        00:00:00 [loop12]
# root         345       2  0 15:27 ?        00:00:00 [loop13]
# root         372       2  0 15:27 ?        00:00:00 [cryptd]
# root         602       1  0 15:27 ?        00:00:00 /usr/lib/accountsservice/accounts-daemon
# root         603       1  0 15:27 ?        00:00:01 /usr/sbin/acpid
# root         607       1  0 15:27 ?        00:00:00 /usr/sbin/cron -f
# root         610       1  0 15:27 ?        00:00:01 /usr/sbin/NetworkManager --no-daemon
# root         618       1  0 15:27 ?        00:00:00 /usr/sbin/irqbalance --foreground
# root         619       1  0 15:27 ?        00:00:00 /usr/bin/python3 /usr/bin/networkd-dispatcher --run-startup-triggers
# root         622       1  0 15:27 ?        00:00:00 /usr/lib/policykit-1/polkitd --no-debug
# root         631       1  0 15:27 ?        00:00:02 /usr/lib/snapd/snapd
# root         633       1  0 15:27 ?        00:00:00 /usr/libexec/switcheroo-control
# root         639       1  0 15:27 ?        00:00:00 /lib/systemd/systemd-logind
# root         642       1  0 15:27 ?        00:00:00 /usr/lib/udisks2/udisksd
# root         643       1  0 15:27 ?        00:00:00 /sbin/wpa_supplicant -u -s -O /run/wpa_supplicant
# root         697       1  0 15:27 ?        00:00:00 /usr/sbin/cupsd -l
# root         713       1  0 15:27 ?        00:00:00 /usr/sbin/cups-browsed
# root         720       1  0 15:27 ?        00:00:00 /usr/sbin/ModemManager --filter-policy=strict
# root         728       1  0 15:27 ?        00:00:00 /usr/bin/python3 /usr/share/unattended-upgrades/unattended-upgrade-shutdown --wait-for-signal
# root         746       1  0 15:27 ?        00:00:00 /usr/sbin/gdm3
# root         757     746  0 15:27 ?        00:00:00 gdm-session-worker [pam/gdm-autologin]
# root         996       1  0 15:27 ?        00:00:00 /usr/lib/upower/upowerd
# root        4550       2  0 20:28 ?        00:00:00 [kworker/3:0-events]
# root        5171       2  0 20:33 ?        00:00:00 [kworker/2:1-events]
# root        5181       2  0 20:38 ?        00:00:00 [kworker/0:2-events]
# root        5278       2  0 20:44 ?        00:00:00 [kworker/2:2]
# root        5304       2  0 20:48 ?        00:00:00 [kworker/u8:0-events_unbound]
# root        5420       2  0 20:53 ?        00:00:00 [kworker/u8:1-events_power_efficient]
# root        5488       2  0 21:01 ?        00:00:00 [kworker/1:2-events]
# root        5493       2  0 21:01 ?        00:00:00 [kworker/0:0-ata_sff]
# root        5525       2  0 21:04 ?        00:00:00 [kworker/3:2-mm_percpu_wq]
# root        5541       2  0 21:09 ?        00:00:00 [kworker/1:0-events]
# root        5554       2  0 21:14 ?        00:00:00 [kworker/u8:2-events_unbound]

ps -ef | grep ^root

--------------------------------------------------------------------------------------------------------------------------------------------------
# Ερώτηση 17.
# Πόσα αρχεία του τρέχοντος καταλόγου σας (μόνο του τρέχοντος - όχι και των υποκαταλόγων του) έχουν "permissions" "rw" από τους πάντες και "x" από 
# κανέναν;
#
# Απάντηση : Μεταβαίνουμε στον κατάλογο "./Documents/Project1" με την εντολή "cd". Θα χρησιμοποιήσουμε την εντολή σωλήνωσης "|" για να χρησιμοποιή-
# σουμε τρεις εντολές. Πρώτον, την "find" με παράμετρο "-maxdepth 0", για να γίνει αναζήτηση κάτω από "0" επίπεδα από τον τρέχοντα κατάλογο "Project1".
# Δεύτερον, την εντολή "find" με παραμέτρο "-perm 777", για να γίνει αναζήτηση των αρχείων με δικαιώματα στο οκταδικό σύστημα αρίθμησης "777". Τρίτον,
# η εντολή "wc" με παράμετρο "-l", εμφανίζει το πλήθος των αρχείων του καταλόγου "Project1" που έχουν δικαιώματα "rw" από τους πάντες και "x" από κανέ-
# ναν (777). Συνεπώς, με την εντολή διασωλήνωσης "|" εμφανίζονται όλα τα αρχεία του καταλόγου "Project1" (χωρίς τους υποκαταλόγους του) με δικαίωματα 
# "rw" από τους πάντες και "x" από κανέναν (στο οκταδικό σύστημα αρίθμησης 777).
#
# Αποτέλεσμα εκτέλεσης της τελευταίας εντολής :
# 
# 1

cd ./Documents/Project1
find -maxdepth 0 | find -perm 777 | wc -l


--------------------------------------------------------------------------------------------------------------------------------------------------
# Ερώτηση 20.
# Ταξινομήστε τα περιεχόμενα του αρχείου "ask1.txt" ως προς το "username" σε φθίνουσα σειρά.
#
# Απάντηση : Μεταβαίνουμε στον κατάλογο "./Documents/Project1/testdir1" με την εντολή "cd". Θα χρησιμοποιήσουμε την εντολή "sort" με παράμετρο "-r" 
# για να γίνει η ταξινόμηση των περιεχομένων του αρχείου "ask1.txt" ως προς το "username" σε φθίνουσα σειρά.
#
# Αποτέλεσμα εκτέλεσης της τελευταίας εντολής :
#
# Nick Pappas nick4 11223 Aigaleo 5324123
# Nick Nikolaoy nick23 12232 Aigaleo 5314555
# Helen Thanoy helen36 11132 Peristeri 9718345
# Helen Ioannoy helen367 13222 Athens -------
# Helen Georgioy helen3 12136 Peristeri 5748456
# George Pappas george2 12136 Peristeri -------
# George Georgioy george583 11132 Athens -------

cd ./Documents/Project1/testdir1 
sort -r ask1.txt

--------------------------------------------------------------------------------------------------------------------------------------------------
# Ερώτηση 26.
# Έστω τα ακόλουθα items του file system με "protection strings": (α) "-rwxr-x--x", (β) "drwxr-x--- " και (γ) "drwx--x--x". Εξηγείστε τι είδους "items" 
# είναι και ποια τα δικαιώματα πρόσβασης "user", "group" και "others" σε αυτά.
#
# Απάντηση : (α) Το πρώτο "item" είναι αρχείο από την πρώτη στήλη του "protection string" που είναι ο χαρακτήρας "-". Τα δικαιώματα του "user" είναι 
# "rwx", από την δεύτερη, τρίτη, τέταρτη στήλη του "protection string", δηλαδή, της ανάγνωσης "r", της εγγραφής "w" και της εκτέλεσης "x". Τα δικαιώ-
# ματα του "group" είναι "rx", από την πέμπτη, έκτη και έβδομη στήλη του "protection string", δηλαδή, της ανάγνωσης "r" και της εκτέλεσης "x". Τέλος,
# τα δικαιώματα των "others" είναι "x" από την όγδοη, ένατη και δέκατη στήλη του "protection string", δηλαδή, της εκτέλεσης "x". 
# (β) Το δεύτερο "item" είναι κατάλογος από την πρώτη στήλη του "protection string" που είναι ο χαρακτήρας "d" (directory). Τα δικαιώματα του "user" 
# είναι "rwx", από την δεύτερη, τρίτη, τέταρτη στήλη του "protection string", δηλαδή, της ανάγνωσης "r", της εγγραφής "w" και της εκτέλεσης "x". Τα 
# δικαιώματα του "group" είναι "rx", από την πέμπτη, έκτη και έβδομη στήλη του "protection string", δηλαδή, της ανάγνωσης "r" και της εκτέλεσης "x".
# Τέλος, οι υπόλοιποι "others" από την όγδοη, ένατη και δέκατη στήλη του "protection string" δεν έχουν δικαιώματα.
# (γ) Το τρίτο "item" είναι κατάλογος από την πρώτη στήλη του "protection string" που είναι ο χαρακτήρας "d" (directory). Τα δικαιώματα του "user" 
# είναι "rwx", από την δεύτερη, τρίτη, τέταρτη στήλη του "protection string", δηλαδή, της ανάγνωσης "r", της εγγραφής "w" και της εκτέλεσης "x". Τα 
# δικαιώματα του "group" είναι "x", από την πέμπτη, έκτη και έβδομη στήλη του "protection string", δηλαδή, της εκτέλεσης "x".

--------------------------------------------------------------------------------------------------------------------------------------------------
# Ερώτηση 27.
# Αλλάξτε τα permissions όλων των αρχείων του καταλόγου "testdir1" έτσι ώστε να έχουν δικαίωμα εκτέλεσης και εγγραφής μόνο ο ιδιοκτήτης, ενώ δικαί-
# ωμα ανάγνωσης να έχουν όλοι.
#
# Απάντηση : Μεταβαίνουμε στον κατάλογο "./Documents/Project1/testdir1" με την εντολή "cd". Θα χρησιμοποιήσουμε την εντολή "chmod" για να αλλάξουμε
# τα "permissions" των αρχείων με αντίστοιχες παραμέτρους.

chmod u+x ask1.txt

#  Προσθέτουμε το δικαίωμα της εκτέλεσης "x" στον ιδιοκτήτη "user"

chmod g-w ask1.txt

# Αφαιρούμε το δικαίωμα εγγραφής από το "group"
#
# Αποτέλεσμα εκτέλεσης της εντολής :
#
# -rwxr--r-- 2 ice19390005 ice19390005   312 Δεκ  17 02:17 ask1.txt*













	
